/* eslint-disable @typescript-eslint/no-unused-vars */
// 1. Heloo World task
// TODO: creaate excercise1 folder
// TODO: check node version
// TODO: check npm version
// TODO: check npx version
// TODO: init npm project
// TODO: install typescript
// TODO: generate tsconfig.json
// TODO: create src/index.ts with this code
function excercise1() {
  let greeting: string;
  greeting = 'Hello World';
  greeting += '!!!';
  console.log(greeting);
}
excercise1();
// TODO: run typescript in watch mode
// TODO: compare with javascript generated by typescript

// 2. loop which prints string to console n times
function excercise2() {
  // declare two varaibles - one of string, one of type number
  // assign string var value 'Hello'
  const greeting1: string = 'Hello';
  // assign number var value 3
  const quantity: number = 3;
  // create a while loop which prints string variable to console 3 times
  let i = 0;
  while (i < quantity) {
    console.log(greeting1);
    i++;
  }
  // try to assign number variable to string variable - observe the error
  // const test: number = 'test';
}
excercise2();

// 3. code that generates array of numbers - from n to m
function excercise3() {
  // TODO: declare varaibles n and m of type number
  let n: number;
  let m: number;
  // TODO: declare varaible result of type array of numbers
  const result: number[] = [];
  let result2: number[] = [];
  // TODO: assign n and m some values - n = 1, m = 10
  n = 1;
  // eslint-disable-next-line prefer-const
  m = 10;
  // TODO: create a for loop which adds numbers from n to m to result array
  for (n = 1; n <= m; n++) {
    result.push(n);
  }
  // TODO: support case where m > n (reverse the order)
  // Можна циклом сделать в обратной последовательности
  // n = 1;
  // m = 10;
  // for (m = 10; m >= n; m--) {
  //   result2.push(m);
  // }
  // Или Просто развернуть существующий массив
  result2 = result.reverse();
  // TODO: print result array to console
  console.log(result);
  console.log(result2);
}
excercise3();
// TODO: compile and run the code
